{"version":3,"sources":["components/Card.js","components/NewCardForm.js","components/Board.js","App.js","registerServiceWorker.js","index.js"],"names":["Card","deleteCard","_this","props","removeCardCallBack","cardData","id","symbol","this","emoji","text","react_default","a","createElement","className","getUnicode","type","aria-label","onClick","Component","EMOJI_LIST","NewCardForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onInputChange","event","updatedState","field","target","name","value","setState","addNewCard","preventDefault","addCardCallBack","state","emojis","map","i","key","onSubmit","onChange","Board","removeCard","cardId","axios","delete","concat","url","then","response","cards","filter","cardItem","card","catch","error","message","addCard","boardName","post","updatedCards","push","data","getUpdatedData","cardUrl","get","console","log","_this2","src_components_Card","src_components_NewCardForm","App","boards","selectedBoard","allBoards","boardItem","board","src_components_Board","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.416bea38.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\n\nimport './Card.css';\n\nclass Card extends Component {\n  deleteCard = () => {\n    this.props.removeCardCallBack(this.props.cardData.id);\n  }\n\n  render() {\n    const symbol = this.props.cardData.emoji;\n    const text = this.props.cardData.text;\n    return (\n      <section className=\"card card__content\">\n        <p className=\"card__content-text\">{text}</p>\n        <p className=\"card__content-emoji\">{(symbol) ? emoji.getUnicode(symbol) : \"\"}</p>\n        <section>\n          <button\n            className=\"card__delete\"\n            type=\"button\"\n            aria-label=\"Close\"\n            onClick={this.deleteCard}\n          >\n            Delete\n        </button>\n        </section>\n      </section>\n    )\n  }\n}\n\nCard.propTypes = {\n  removeCardCallBack: PropTypes.func,\n  cardData: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string,\n    emoji: PropTypes.string,\n  })\n};\n\nexport default Card;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\nimport './NewCardForm.css';\n\nconst EMOJI_LIST = [\"\", \"heart_eyes\", \"beer\", \"clap\", \"sparkling_heart\", \"heart_eyes_cat\", \"dog\"]\n\nclass NewCardForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      emoji: \"\",\n    };\n  }\n\n  onInputChange = (event) => {\n    const updatedState = {};\n    const field = event.target.name;\n    const value = event.target.value;\n\n    updatedState[field] = value;\n    this.setState(updatedState);\n  }\n\n  addNewCard = (event) => {\n    event.preventDefault();\n\n    this.props.addCardCallBack(this.state);\n    this.setState({\n      text: \"\",\n      emoji: \"\",\n    })\n  }\n\n  render() {\n    const emojis = EMOJI_LIST.map((symbol, i) => {\n      return (\n        <option\n          key={i}\n          value={symbol}\n        >{emoji.getUnicode(symbol)}</option>\n      );\n    });\n\n    return (\n      <section className=\"new-card-form\">\n        <h3 className=\"new-card-form__header\">Add new card</h3>\n        <form onSubmit={this.addNewCard} className=\"new-card-form__form\">\n          <label className=\"new-card-form__form-label\"> text </label>\n          <textarea className=\"new-card-form__form-textarea\"\n            name=\"text\"\n            id=\"text\"\n            type=\"text\"\n            onChange={this.onInputChange}\n            value={this.state.text}\n          >\n          </textarea>\n\n          <label className=\"new-card-form__form-label\"> Emoji </label>\n          <select className=\"new-card-form__form-select\"\n            value={this.state.emoji}\n            name=\"emoji\"\n            onChange={this.onInputChange}\n            id=\"emoji\">\n            {emojis}\n          </select>\n\n          <input type=\"submit\" value=\"Submit Line\" className=\"new-card-form__form-button\" />\n\n        </form>\n\n      </section>\n    );\n  }\n}\n\nNewCardForm.propTypes = {\n  addCardCallBack: PropTypes.func,\n};\nexport default NewCardForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport './Board.css';\nimport Card from './Card';\nimport NewCardForm from './NewCardForm';\n\nclass Board extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      boardName: \"\",\n      cards: [],\n    };\n  }\n\n  removeCard = (cardId) => {\n    axios.delete(`${this.props.url}/cards/${cardId}`)\n      .then((response) => {\n        const cards = this.state.cards.filter((cardItem) => cardItem.card.id !== cardId);\n        this.setState({ cards, });\n      })\n      .catch((error) => {\n        this.setState({ error: error.message });\n      });\n  }\n\n  addCard = (card) => {\n    const url = `${this.props.url}/boards/${this.props.boardName}/cards`\n    axios.post(url, card)\n      .then((response) => {\n        const updatedCards = this.state.cards;\n        updatedCards.push(response.data);\n        this.setState({\n          cards: updatedCards,\n          error: \"\",\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          error: error.message,\n        });\n      });\n  }\n  \n  getUpdatedData = () => {\n    const cardUrl = `${this.props.url}/boards/${this.props.boardName}/cards`;\n    axios.get(cardUrl).then((response) => {\n      this.setState({\n        cards: response.data,\n        boardName: this.props.boardName,\n      })\n    }).catch((error) => {\n      this.setState({ error: 'Sorry, something went wrong' })\n    })\n  }\n\n  componentDidMount() {\n    this.getUpdatedData();\n  }\n\n  componentDidUpdate() {\n    if (this.state.boardName !== this.props.boardName) {\n      console.log(\"UPDATING...\")\n      this.getUpdatedData();\n    }\n  }\n\n  render() {\n    const cards = this.state.cards.map((cardItem, i) => {\n      return (\n        <section key={i}>\n          <Card\n            cardData={cardItem.card}\n            removeCardCallBack={this.removeCard}>\n          </Card>\n        </section>)\n    });\n\n    return (\n      <section>\n        <h3>Board: {this.props.boardName}</h3>\n        <NewCardForm addCardCallBack={this.addCard}></NewCardForm>\n\n        <section className=\"board\">{cards}</section>\n      </section>\n    )\n  }\n\n}\n\nBoard.propTypes = {\n  url: PropTypes.string.isRequired,\n  boardName: PropTypes.string.isRequired,\n};\nexport default Board;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Board from './components/Board';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      boards: [],\n      selectedBoard: 'eve',\n    };\n  }\n\n  componentDidMount() {\n    const url = \"https://inspiration-board.herokuapp.com/boards\";\n    axios.get(url).then((response) => {\n      this.setState({ boards: response.data })\n    }).catch((error) => {\n      this.setState({ error: 'Sorry, something went wrong' })\n    })\n  }\n\n  onInputChange = (event) => {\n    const updatedState = {};\n    const field = event.target.name;\n    const value = event.target.value;\n\n    updatedState[field] = value;\n    this.setState(updatedState);\n  }\n\n  render() {\n    const allBoards = this.state.boards.map((boardItem, i) => {\n      return (<option key={i} value={boardItem.board.name}>{boardItem.board.name}</option>);\n    });\n\n\n    return (\n      <section>\n        <header className=\"header\">\n          <h1 className=\"header__h1\"><span className=\"header__text\">Inspiration Board</span></h1>\n        </header>\n\n        <section >\n          <label> Choose a board </label>\n          <select\n            className=\"new-board-select\"\n            name=\"selectedBoard\"\n            value={this.state.selectedBoard}\n            onChange={this.onInputChange}>\n            {allBoards}\n          </select>\n        </section>\n\n        <section>\n          <Board\n            url=\"https://inspiration-board.herokuapp.com\"\n            boardName={this.state.selectedBoard}>\n          </Board>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}